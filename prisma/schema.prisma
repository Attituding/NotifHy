generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model activities {
  index             Int     @id @default(autoincrement())
  id                String  @db.VarChar(20)
  timestamp         Float
  firstLogin        Float?
  lastLogin         Float?
  lastLogout        Float?
  version           String? @db.VarChar(10)
  language          String? @db.VarChar(15)
  gameType          String? @db.VarChar(25)
  gameMode          String? @db.VarChar(25)
  gameMap           String? @db.VarChar(25)
  lastClaimedReward Float?
  rewardScore       Int?
  rewardHighScore   Int?
  totalDailyRewards Int?
  totalRewards      Int?
  users             users   @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users")
}

model authentication {
  id    String @id @db.VarChar(20)
  hash  String @db.VarChar(128)
  salt  String @db.VarChar(32)
  users users?
}

model config {
  index                Int      @id @default(0)
  core                 Boolean  @default(true)
  coreCron             String   @default("*/30 * * * *") @db.VarChar(20)
  devMode              Boolean  @default(false)
  hypixelRequestBucket Int      @default(10)
  logLevel             Int      @default(30)
  ownerGuilds          String[] @default([]) @db.VarChar(20)
  owners               String[] @default([]) @db.VarChar(20)
  requestTimeout       Int      @default(5000)
  requestRetryLimit    Int      @default(3)
}

model friends {
  id      String  @id @db.VarChar(20)
  channel String? @db.VarChar(20)
  users   users?
}

model modules {
  id       String  @id @db.VarChar(20)
  friends  Boolean @default(false)
  playtime Boolean @default(false)
  rewards  Boolean @default(false)
  users    users?
}

model playtime {
  id      String  @id @db.VarChar(20)
  channel String? @db.VarChar(20)
  users   users?
}

model rewards {
  id                String  @id @db.VarChar(20)
  delay             Int     @default(0)
  interval          Int     @default(1800000)
  lastClaimedReward Float   @default(0)
  lastNotified      Float   @default(0)
  milestones        Boolean @default(true)
  users             users?
}

model system_messages {
  index           Int      @id @default(autoincrement())
  id              String   @db.VarChar(20)
  timestamp       Float
  name_key        String   @db.VarChar(256)
  name_variables  String[] @default([]) @db.VarChar(256)
  value_key       String   @db.VarChar(256)
  value_variables String[] @default([]) @db.VarChar(256)
  read            Boolean  @default(false)
  users           users    @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String            @id @db.VarChar(20)
  uuid            String            @unique(map: "uuid_ukey") @db.Uuid
  locale          String            @default("en-US") @db.VarChar(5)
  activities      activities[]
  system_messages system_messages[]
  authentication  authentication    @relation(fields: [id], references: [id], onDelete: Cascade, map: "authentication")
  friends         friends           @relation(fields: [id], references: [id], onDelete: Cascade, map: "friends")
  modules         modules           @relation(fields: [id], references: [id], onDelete: Cascade, map: "modules")
  playtime        playtime          @relation(fields: [id], references: [id], onDelete: Cascade, map: "playtime")
  rewards         rewards           @relation(fields: [id], references: [id], onDelete: Cascade, map: "rewards")
}
